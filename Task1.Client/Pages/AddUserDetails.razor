@page "/userdetails/add"
@page "/userdetails/edit/{Id:int}"
@using Task1.Shared.Models;
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title UserDetails </h1>
<hr />
<EditForm Model="@userDetails" OnValidSubmit="SaveUser">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="userDetails.Name" />
        </div>
        <ValidationMessage For="@(() => userDetails.Name)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">Designation</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="userDetails.Designation" />
        </div>
        <ValidationMessage For="@(() => userDetails.Designation)" />
    </div>
  
    <div class="mb-3">
        <label for="Address" class="form-label">Address</label>
        <div class="col-md-4">
            <InputTextArea class="form-control" @bind-Value="userDetails.Address" />
        </div>
        <ValidationMessage For="@(() => userDetails.Address)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">Date Of Birth </label>
        <div class="col-md-4">
            <InputDate  class="form-control" @bind-Value="userDetails.DOB" />
        </div>
        <ValidationMessage For="@(() => userDetails.DOB)" />
    </div>
    <div class="mb-3">
        <label for="Technologies" class="form-label">Gender</label>
        <div class="col-md-4">
            <InputSelect class="form-control"  @bind-Value="userDetails.Gender">
                @foreach (int i  in Enum.GetValues(typeof(Gender)))
                {
                    <option value="@i">@Enum.GetName(typeof(Gender),i)</option>
                }
            </InputSelect>
        </div>
        
    </div>
   
    
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
   
    [Parameter]
    public int Id { get; set; }
    protected string Title = "Add";
    protected UserDetails userDetails = new UserDetails();
    protected Gender gender;
    
    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            Title = "Edit";
            userDetails = await Http.GetFromJsonAsync<UserDetails>("api/UserDetails/" + Id);
        }
    }
    protected async Task SaveUser()
    {
        if (userDetails.Id != 0)

        {
            var userdetails1 = new UserDetails
                {
                    Name = userDetails.Name,
                    Designation = userDetails.Designation,
                    DOB= userDetails.DOB,
                    Address = userDetails.Address,
                    Gender= userDetails.Gender,
                   
                

                
            };
            await Http.PutAsJsonAsync("api/userdetails", userdetails1);
        }
        else
        {
            var userdetails1 = new UserDetails
                {
                    Name = userDetails.Name,
                    Designation = userDetails.Designation,
                    DOB= userDetails.DOB,
                    Address = userDetails.Address,
                    Gender= userDetails.Gender,             
            };
            await Http.PostAsJsonAsync("api/userdetails", userDetails);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchuserdetails");
    }
}