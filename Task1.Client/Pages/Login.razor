@layout LoginLayout
@page "/login"
@using Task1.Client.Services
@inject HttpClient Http

@inject NavigationManager NavManager
@using System.Text.Json
<div class="h-100 mt-5 d-flex flex-row justify-content-center">
<div class="card text-light w-25 " style="background-color: rgb(62, 48, 84);">
    <h4 class="card-header">Login</h4>
    <div class="card-body ">
        <EditForm class="d-flex flex-column justify-content-center" Model="@model" OnValidSubmit="OnLogin">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Username</label>
                <InputText @bind-Value="model.Email" class="form-control" />
                <ValidationMessage For="@(() => model.Email)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="model.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => model.Password)" />
            </div>
            <button  type="submit" class="btn btn-primary mt-2 ">
                
                Login
            </button>
        </EditForm>
    </div>
</div>

</div>

@code {
    Task1.Client.Models.LoginRequest model = new Models.LoginRequest();
   

    async Task OnLogin()

    {
        // await AuthService.OnLogin(model);
        //var client = new HttpClient();
        HttpResponseMessage  result = await Http.PostAsJsonAsync("api/User/login", model);
        if (result.IsSuccessStatusCode)
        {
            var response = result.Content.ReadAsStringAsync();
            string jsonString = JsonSerializer.Serialize(response.Result);
            NavManager.NavigateTo("/dashboard");
        }
        else
        {
            NavManager.NavigateTo("/login");
        }
        
       
    }



}
